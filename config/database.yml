default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS", 5) %>
  username: <%= ENV["PGUSER"] || "dmurray" %>
  password: <%= ENV["PGPASSWORD"] %>
  host: <%= ENV["PGHOST"] || "localhost" %>
  port: 5432
  pool: 5


development:
  <<: *default
  database: selfultimate_development

test:
  <<: *default
  database: selfultimate_test

# production can stay minimal; Heroku will supply DATABASE_URL
production:
  <<: *default
  database: <%= ENV["DATABASE_URL"].presence || "selfultimate_production" %>









 # SQLite. Versions 3.8.0 and up are supported.
# #   gem install sqlite3
# #
# #   Ensure the SQLite 3 gem is defined in your Gemfile
# #   gem "sqlite3"
# #
# default: &default
#   adapter: sqlite3
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#   timeout: 5000

# development:
#   <<: *default
#   database: storage/development.sqlite3
#   # Add retry configuration for busy database
#   retry_on_busy: true
#   retry_delay: 0.1

# # Warning: The database defined as "test" will be erased and
# # re-generated from your development database when you run "rake".
# # Do not set this db to the same as development or production.
# test:
#   <<: *default
#   database: storage/test.sqlite3


# # Store production database in the storage/ directory, which by default
# # is mounted as a persistent Docker volume in config/deploy.yml.
# production:
#   primary:
#     <<: *default
#     database: storage/production.sqlite3
#   cache:
#     <<: *default
#     database: storage/production_cache.sqlite3
#     migrations_paths: db/cache_migrate
#   queue:
#     <<: *default
#     database: storage/production_queue.sqlite3
#     migrations_paths: db/queue_migrate
#   cable:
#     <<: *default
#     database: storage/production_cable.sqlite3
#     migrations_paths: db/cable_migrate
